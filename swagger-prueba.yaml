swagger: "2.0"
info:
  description: "This is a sample server vehiculostore server"
  version: "1.0.0"
  title: "Swagger vehiclestore"
  contact:
    email: "mattewppe@hotmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "vehiculostore.swagger.io"
basePath: "/api/vehiculo/v1"
tags:
  - name: "vehiculo"
    description: "Everything about your vehiculo"
    externalDocs:
      description: "Find out more"
      url: "http://swagger.io"
schemes:
  - "https"
  - "http"
paths:
  /vehicle:
    post:
      tags:
        - "vehiculo"
      summary: "Add a new vehiculo to the store"
      description: "Add a new vehiculo to the store"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "vehiculo object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/Vehiculo"
      responses:
        "201":
          description: "successful operation"
          schema:
            $ref: "#/definitions/RespuestaCreacionVehiculo"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "vehiculo not found"
    get:
      tags:
        - "vehiculo"
      summary: "Returns all vehiculo"
      description: "Returns all vehiculo"
      produces:
        - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/RespuestaListadoVehiculo"
  /vehiculo/{id}:
    get:
      tags:
        - "vehiculo"
      summary: "Find vehiculo by ID"
      description: "Returns a single vehiculo"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of vehiculo to return"
          required: true
          type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Vehiculo"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "vehiculo not found"
  /vehiculo/info-by-id/{id}:
    get:
      tags:
        - "vehiculo"
      summary: "Find vehiculo by ID"
      description: "Returns a single vehiculo"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of vehiculo to return"
          required: true
          type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Vehiculo"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "vehiculo not found"
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  RespuestaCreacionVehiculo:
    type: object
    properties:
      message:
        type: string
        description: "Mensaje de respuesta"
        example: "Sucessfully submitted vehicle with name Porche"
      vehiculoId:
        type: string
        description: Identificador generado por DynamoDB
  RespuestaListadoVehiculo:
    type: object
    properties:
      planetas:
        type: array
        items:
          $ref: "#/definitions/Vehiculo"
        description: "Listado de Vehiculo"
  Vehicle:
    type: object
    required:
    properties:
      nombre:
        type: string
      modelo:
        type: string
      fabricante:
        type: string
      costoCreditos:
        type: string
      longitud:
        type: string
      velocidadMaximaAtmosfera:
        type: string
      tripulacion:
        type: string
      pasajeros:
        type: string
      cargaCapacidad:
        type: string
      consumibles:
        type: string
      claseVehiculo:
        type: string
      pilotos:
        type: array
        items:
          type: string
      peliculas:
        type: array
        items:
          type: string
      creado:
        type: string
      editado:
        type: string
      url:
        type: string
        description: url del vehiculo
        example: https://swapi.py4e.com/api/vehicles/4/"
